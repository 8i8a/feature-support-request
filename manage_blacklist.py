#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–µ—Ä–Ω—ã–º —Å–ø–∏—Å–∫–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""

import asyncio
import asyncpg
import sys

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
DB_HOST = "localhost"
DB_PORT = 5432
DB_USER = "postgres"
DB_PASSWORD = "password"  # –ò–∑–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π –ø–∞—Ä–æ–ª—å
DB_NAME = "support_bot"

async def get_connection():
    """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    return await asyncpg.connect(
        host=DB_HOST, port=DB_PORT,
        user=DB_USER, password=DB_PASSWORD,
        database=DB_NAME
    )

async def list_users():
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∏—Ö —Å—Ç–∞—Ç—É—Å–æ–º"""
    conn = await get_connection()
    try:
        users = await conn.fetch("""
            SELECT u.user_id, u.nickname, u.is_blocked,
                   COUNT(c.id) as complaints_count
            FROM users u
            LEFT JOIN complaints c ON u.user_id = c.original_user_id
            GROUP BY u.user_id, u.nickname, u.is_blocked
            ORDER BY complaints_count DESC, u.user_id
        """)
        
        print("=" * 60)
        print("üë• –°–ü–ò–°–û–ö –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô")
        print("=" * 60)
        
        for user in users:
            user_id = user['user_id']
            nickname = user['nickname']
            is_blocked = user['is_blocked']
            complaints = user['complaints_count']
            
            if is_blocked:
                status = "üö´ –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù"
                if complaints >= 5:
                    status += " (–∞–≤—Ç–æ–±–ª–æ–∫)"
            else:
                status = "‚úÖ –∞–∫—Ç–∏–≤–µ–Ω"
            
            danger = ""
            if complaints >= 5:
                danger = " ‚ö†Ô∏è –ö–†–ò–¢–ò–ß–ù–û"
            elif complaints >= 3:
                danger = " üî¥ –≤—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫" 
            elif complaints >= 2:
                danger = " üü° —Å—Ä–µ–¥–Ω–∏–π —Ä–∏—Å–∫"
            
            print(f"{user_id:>12} | {nickname:<20} | {status:<15} | {complaints} –∂–∞–ª–æ–±{danger}")
        
        print("=" * 60)
        
    finally:
        await conn.close()

async def block_user(user_id: int):
    """–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    conn = await get_connection()
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        user = await conn.fetchrow("SELECT nickname, is_blocked FROM users WHERE user_id = $1", user_id)
        if not user:
            print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        if user['is_blocked']:
            print(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user['nickname']} (ID: {user_id}) —É–∂–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
            return
        
        # –ë–ª–æ–∫–∏—Ä—É–µ–º
        await conn.execute("UPDATE users SET is_blocked = TRUE WHERE user_id = $1", user_id)
        print(f"üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user['nickname']} (ID: {user_id}) –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
        
    finally:
        await conn.close()

async def unblock_user(user_id: int):
    """–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    conn = await get_connection()
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        user = await conn.fetchrow("SELECT nickname, is_blocked FROM users WHERE user_id = $1", user_id)
        if not user:
            print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        if not user['is_blocked']:
            print(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user['nickname']} (ID: {user_id}) –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
            return
        
        # –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º
        await conn.execute("UPDATE users SET is_blocked = FALSE WHERE user_id = $1", user_id)
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user['nickname']} (ID: {user_id}) —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
        
    finally:
        await conn.close()

async def show_help():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"""
    print("""
üõ°Ô∏è  –£–ü–†–ê–í–õ–ï–ù–ò–ï –ß–ï–†–ù–´–ú –°–ü–ò–°–ö–û–ú

–ö–æ–º–∞–Ω–¥—ã:
  python manage_blacklist.py list                    - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  python manage_blacklist.py block <user_id>         - –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  python manage_blacklist.py unblock <user_id>       - —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  python manage_blacklist.py help                    - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–ü—Ä–∏–º–µ—Ä—ã:
  python manage_blacklist.py list
  python manage_blacklist.py block 12345678
  python manage_blacklist.py unblock 12345678

‚ÑπÔ∏è  –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ —Å–º–æ–≥—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º

ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞:
   ‚Ä¢ –ü—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ 5 –∂–∞–ª–æ–± –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
   ‚Ä¢ –ü–æ–º–µ—á–∞–µ—Ç—Å—è –∫–∞–∫ "(–∞–≤—Ç–æ–±–ª–æ–∫)" –≤ —Å–ø–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
   ‚Ä¢ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥–æ–π unblock
    """)

async def main():
    if len(sys.argv) < 2:
        await show_help()
        return
    
    command = sys.argv[1].lower()
    
    try:
        if command == "list":
            await list_users()
        elif command == "block":
            if len(sys.argv) != 3:
                print("‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python manage_blacklist.py block <user_id>")
                return
            user_id = int(sys.argv[2])
            await block_user(user_id)
        elif command == "unblock":
            if len(sys.argv) != 3:
                print("‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python manage_blacklist.py unblock <user_id>")
                return
            user_id = int(sys.argv[2])
            await unblock_user(user_id)
        elif command == "help":
            await show_help()
        else:
            print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")
            await show_help()
            
    except ValueError:
        print("‚ùå user_id –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(main())
