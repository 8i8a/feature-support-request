name: Dev Deploy

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  deploy:
    runs-on: self-hosted
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Stop services
      run: |
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã –µ—Å–ª–∏ –æ–Ω–∏ –∑–∞–ø—É—â–µ–Ω—ã
        pkill -f "python main.py" || true
        pkill -f "python bot.py" || true
        sleep 5
        
    - name: Database migration check
      run: |
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        python check_db.py || echo "Database check completed"
        
    - name: Start API service
      run: |
        # –ó–∞–ø—É—Å–∫–∞–µ–º API –≤ —Ñ–æ–Ω–µ
        nohup python main.py > api.log 2>&1 &
        sleep 10
        
    - name: Health check API
      run: |
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ API –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
        for i in {1..30}; do
          if curl -f http://localhost:8000/health; then
            echo "API is healthy"
            break
          fi
          echo "Waiting for API... ($i/30)"
          sleep 2
        done
        
    - name: Start Bot service  
      run: |
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ —Ñ–æ–Ω–µ
        nohup python bot.py > bot.log 2>&1 &
        sleep 5
        
    - name: Verify deployment
      run: |
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å—ã –∑–∞–ø—É—â–µ–Ω—ã
        pgrep -f "python main.py" || (echo "API process not found" && exit 1)
        pgrep -f "python bot.py" || (echo "Bot process not found" && exit 1)
        echo "‚úÖ All services are running"
        
    - name: Cleanup old logs
      run: |
        # –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Ñ–∞–π–ª–æ–≤ –ª–æ–≥–æ–≤
        find . -name "*.log" -type f -mtime +7 -delete || true
        
    - name: Send notification
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "üöÄ Deployment to dev completed successfully"
        else
          echo "‚ùå Deployment to dev failed"
        fi
