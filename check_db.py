import asyncpg
import asyncio

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (–∏–∑–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª—å –Ω–∞ —Å–≤–æ–π)
DB_HOST = "localhost"
DB_PORT = 5432
DB_USER = "postgres"
DB_PASSWORD = "8998"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –ø–∞—Ä–æ–ª—å
DB_NAME = "support_bot"

async def check_database():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    try:
        conn = await asyncpg.connect(
            host=DB_HOST, port=DB_PORT,
            user=DB_USER, password=DB_PASSWORD,
            database=DB_NAME
        )
        
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        print("=" * 50)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users = await conn.fetch("SELECT user_id, nickname, created_at FROM users ORDER BY created_at")
        print(f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ({len(users)}):")
        for user in users:
            print(f"  ‚Ä¢ {user['nickname']} (ID: {user['user_id']}) - {user['created_at']}")
        
        print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏
        support_msgs = await conn.fetch("""
            SELECT m.id, m.text, m.message_type, u.nickname, m.created_at 
            FROM messages m 
            JOIN users u ON m.user_id = u.user_id 
            WHERE m.type = 'support' 
            ORDER BY m.created_at DESC
        """)
        print(f"üíù –°–æ–æ–±—â–µ–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ ({len(support_msgs)}):")
        for msg in support_msgs:
            text = msg['text'][:50] + "..." if msg['text'] and len(msg['text']) > 50 else msg['text']
            msg_type = "üé§" if msg['message_type'] == 'voice' else "üìù"
            print(f"  ‚Ä¢ {msg_type} {msg['nickname']}: {text or '[–≥–æ–ª–æ—Å–æ–≤–æ–µ]'}")
        
        print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å—ã –ø–æ–º–æ—â–∏
        help_requests = await conn.fetch("""
            SELECT m.id, m.text, m.message_type, u.nickname, m.created_at 
            FROM messages m 
            JOIN users u ON m.user_id = u.user_id 
            WHERE m.type = 'request' 
            ORDER BY m.created_at DESC
        """)
        print(f"üÜò –ó–∞–ø—Ä–æ—Å—ã –ø–æ–º–æ—â–∏ ({len(help_requests)}):")
        for req in help_requests:
            text = req['text'][:50] + "..." if req['text'] and len(req['text']) > 50 else req['text']
            msg_type = "üé§" if req['message_type'] == 'voice' else "üìù"
            print(f"  ‚Ä¢ {msg_type} {req['nickname']}: {text or '[–≥–æ–ª–æ—Å–æ–≤–æ–µ]'}")
        
        print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã (–∫–æ—Ç–æ—Ä—ã–µ –µ—â–µ –Ω–µ –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç–≤–µ—Ç)
        print("üîç –°—Ç–∞—Ç—É—Å –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–º–æ—â–∏:")
        if help_requests:
            print(f"  ‚Ä¢ –í—Å–µ–≥–æ —Å–æ–∑–¥–∞–Ω–æ: {len(help_requests)}")
            print("  ‚Ä¢ –í—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –ø–æ–∫–∞–∑–∞–Ω—ã –≤—ã—à–µ")
            print("  ‚Ä¢ ‚ÑπÔ∏è –ó–∞–ø—Ä–æ—Å—ã —É–¥–∞–ª—è—é—Ç—Å—è –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞")
        else:
            print("  ‚Ä¢ –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–º–æ—â–∏")
        
        print()
        print("=" * 50)
        print(f"üìä –ò—Ç–æ–≥–æ: {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, {len(support_msgs)} –ø–æ–¥–¥–µ—Ä–∂–∫–∏, {len(help_requests)} –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤")
        
        await conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

async def main():
    print("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ...")
    await check_database()

if __name__ == "__main__":
    asyncio.run(main())
